<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0219.0753                               -->
<workbook original-version='18.1' source-build='2020.1.0 (20201.20.0219.0753)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='dummy' inline='true' name='federated.0eyhuz10b6bva21ftq5sw0efk0zo' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='dummy' name='semistructpassivestore-direct.05lxm8f1puzlnm1bn8oel1qw86mj'>
            <connection class='semistructpassivestore-direct' directory='/Users/haodongwu/Desktop/Projects/BehaviorAnalyze' filename='dummy.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[dummy.json]'>
                  <map key='speakers' value='true' />
                  <map key='speakers.Value' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.05lxm8f1puzlnm1bn8oel1qw86mj' name='dummy.json' table='[dummy.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[dummy.json].[Document Index (generated)]' />
          <map key='[name]' value='[dummy.json].[speakers.Value.name]' />
          <map key='[speakers Index (generated)]' value='[dummy.json].[speakers.Index (generated)]' />
          <map key='[text]' value='[dummy.json].[speakers.Value.text]' />
          <map key='[time]' value='[dummy.json].[speakers.Value.time]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[dummy.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>speakers.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[speakers Index (generated)]</local-name>
            <parent-name>[dummy.json]</parent-name>
            <remote-alias>speakers.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>speakers.Value.name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[dummy.json]</parent-name>
            <remote-alias>speakers.Value.name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>speakers.Value.text</remote-name>
            <remote-type>130</remote-type>
            <local-name>[text]</local-name>
            <parent-name>[dummy.json]</parent-name>
            <remote-alias>speakers.Value.text</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>speakers.Value.time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[dummy.json]</parent-name>
            <remote-alias>speakers.Value.time</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per dummy.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at dummy.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per speakers]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([speakers Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at speakers level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>speakers.Value.name</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[speakers Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>speakers.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Text' datatype='string' name='[text]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>speakers.Value.text</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Count' caption='Time' datatype='datetime' datatype-customized='true' name='[time]' role='dimension' type='quantitative'>
        <desc>
          <formatted-text>
            <run>speakers.Value.time</run>
          </formatted-text>
        </desc>
      </column>
      <folder name='Dummy' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
      </folder>
      <folder name='Speakers' role='dimensions'>
        <folder-item name='[name]' type='field' />
        <folder-item name='[speakers Index (generated)]' type='field' />
        <folder-item name='[text]' type='field' />
        <folder-item name='[time]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.570952' measure-ordering='alphabetic' measure-percentage='0.429048' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Students Participation Pattern&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dummy' name='federated.0eyhuz10b6bva21ftq5sw0efk0zo' />
          </datasources>
          <datasource-dependencies datasource='federated.0eyhuz10b6bva21ftq5sw0efk0zo'>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>speakers.Value.name</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[time]' derivation='Second' name='[sc:time:qk]' pivot='key' type='quantitative' />
            <column aggregation='Count' caption='Time' datatype='datetime' datatype-customized='true' name='[time]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>speakers.Value.time</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
                <format attr='size' value='1.1974033117294312' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eyhuz10b6bva21ftq5sw0efk0zo].[none:name:nk]</rows>
        <cols>[federated.0eyhuz10b6bva21ftq5sw0efk0zo].[sc:time:qk]</cols>
      </table>
      <simple-id uuid='{3B141312-F0F4-4923-9A55-15B3DA626D94}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eyhuz10b6bva21ftq5sw0efk0zo].[none:name:nk]</field>
            <field>[federated.0eyhuz10b6bva21ftq5sw0efk0zo].[none:time:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DF323C4A-B946-44C4-95D5-C5370A4FB732}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='318' name='Sheet 2' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAE+CAYAAACEB8e6AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dbVRT154/8G8SHmzCkwbkQZBiu1KURxUXiMLCotWu4sh40apcb/+j1iXS
      0XXbue9ub7u6pm86VbvagcV10DpT763eTp3rctDWShWnWkDkSWxAqYYkggGDgWjkIZD/C1ZS
      U0ATVFD29/Om5eyzz/mdvDjfc/beiRKbzWYDEREJRzrRBRAR0cRgABARCYoBQEQkKAYAEZGg
      GABERIJiABARCYoBQEQkKAYAEZGgGABERIJiABARCYoBQEQkKAYAEZGgGABERIJiABARCYoB
      QEQkKAYAEZGgGABERIJiABARCYoBQEQkKAYAEZGgGABERIJiABARCYoBQEQkKAYAEZGgGABE
      RIJiABARCYoBQEQkKAYAEZGgGABERIJiABARCYoBQEQkKAYAEZGgGABERIJiABARCYoBQEQk
      KAYAEZGgGABERIJiABARCYoBQEQkKAYAEZGgGABERIJiABARCYoBQEQkKAYAEZGgGABERIJi
      ABARCYoBQEQkKAYAEZGgGABERIJiABARCYoBQEQkKAYAEZGgGABERIJiABARCYoBQEQkKAYA
      PdMsFstEl0D0zGIAEBEJigFARCQoBgARkaAYAEREgmIAEBEJigFARCQoBgARkaA8JroAokfV
      9+Vax/97rf/bBFZC9GzhGwARkaAYAEREgmIATEJtbW3Q6XQTXQYRPeU4BzAJFRYWQiaT4f33
      35/oUoa5evUqmpqacP36dUybNg0qlQqxsbF47rnnJro0IuEwAGjc/P3vf8eJEyectp09exZh
      YWH4/e9/Dz8/vwmqjEhMDAAaF0ePHsWJEycQEBCA3NxcvPTSS+jo6MA333yDCxcu4KOPPsIf
      //hHTJkyZaJLJRIG5wDoibt37x5KS0shl8uxc+dOxMfHw9vbG+Hh4di0aRMSEhLQ0dGB8vLy
      iS6VSCgMgAlis9kmuoQHepz1lZeXo7e3F2lpaQgLC3Nqk0qlWLNmDQCgrKzssZ2TiB5O+CGg
      zs5OnDx5Enq9HiaTCQqFAkqlEvPmzUNiYiI8PH75iDQaDc6dO4e0tDSYTCacOXMGLS0tsNls
      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
    </thumbnail>
  </thumbnails>
</workbook>
